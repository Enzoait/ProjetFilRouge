name: Deploy with terraform

on: push

permissions:
  id-token: write
  contents: read

jobs:
  terraform_deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          aws-region: eu-west-1

      - name: Build Frontend Docker image
        run: docker build -t enzoait/projetfilrouge-frontend:${{ github.sha }} ../frontend

      - name: Build Backend Docker image
        run: docker build -t enzoait/projetfilrouge-backend:${{ github.sha }} ../backend

      - name: Login to ECR
        run: aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 304230205768.dkr.ecr.eu-west-1.amazonaws.com

      - name: Tag & Push Frontend
        run: |
          docker tag enzoait/projetfilrouge-frontend:${{ github.sha }} 304230205768.dkr.ecr.eu-west-1.amazonaws.com/projetfilrouge-frontend:${{ github.sha }}
          docker push 304230205768.dkr.ecr.eu-west-1.amazonaws.com/projetfilrouge-frontend:${{ github.sha }}

      - name: Tag & Push Backend
        run: |
          docker tag enzoait/projetfilrouge-backend:${{ github.sha }} 304230205768.dkr.ecr.eu-west-1.amazonaws.com/projetfilrouge-backend:${{ github.sha }}
          docker push 304230205768.dkr.ecr.eu-west-1.amazonaws.com/projetfilrouge-backend:${{ github.sha }}

      - name: Tag & Push Backend
        run: |
          docker tag enzoait/projetfilrouge-backend:${{ github.sha }} 304230205768.dkr.ecr.eu-west-1.amazonaws.com/projetfilrouge-backend:${{ github.sha }}
          docker push 304230205768.dkr.ecr.eu-west-1.amazonaws.com/projetfilrouge-backend:${{ github.sha }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Import existing resources
        run: |
          # Import ECR frontend if not already in state
          if ! terraform state list | grep -q 'aws_ecr_repository.frontend'; then
            terraform import aws_ecr_repository.frontend projetfilrouge-frontend
          fi

          # Import ECR backend if not already in state
          if ! terraform state list | grep -q 'aws_ecr_repository.backend'; then
            terraform import aws_ecr_repository.backend projetfilrouge-backend
          fi

          # Import S3 bucket if not already in state
          if ! terraform state list | grep -q 'aws_s3_bucket.main'; then
            terraform import aws_s3_bucket.main iimtib62673
          fi

          # Import Lambda function si absente du state
          if ! terraform state list | grep -q 'aws_lambda_function.lambda_function_over_https'; then
            terraform import aws_lambda_function.lambda_function_over_https LambdaFunctionOverHttps
          fi


      - name: Import existing OAC
        run: |
          terraform import aws_cloudfront_origin_access_control.s3_oac ${{ secrets.AWS_OAC_ID }}

      - name: Terraform Apply
        run: |
          terraform fmt
          terraform apply --auto-approve

      # - name: Terraform Destroy
      #   run: terraform destroy --auto-approve
